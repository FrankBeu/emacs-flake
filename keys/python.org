* python-keybindings
** marker
#+begin_src elisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; python-keybindings
  ;;;;
  ;;
#+end_src
** INFO
** python
*** local-leader
#+begin_src elisp
  (fb/local-leader-key
    :keymaps 'python-mode-map
    :states  '(normal visual insert)

    ;;;; prefix-r is not as ergonomical as c
    "c"      '(                                                   :which-key "run"              :ignore t)
    "co"     '(run-python                                         :which-key "open"             )
    "cb"     '(python-shell-send-buffer                           :which-key "buffer"           )
    "cd"     '(python-shell-send-defun                            :which-key "defun"            )
    "cf"     '(python-shell-send-file                             :which-key "file"             )
    "cm"     '(python-shell-send-statement                        :which-key "statement"        )
    "cs"     '(python-shell-switch-to-shell                       :which-key "switch"           )
    "cr"     '(python-shell-send-region                           :which-key "region"           )
    "ct"     '(python-shell-send-string                           :which-key "string"           )

    "i"      '(                                                   :which-key "import/indent"    :ignore t)
    "ii"     '(python-skeleton-import                             :which-key "import"           )
    "il"     '(python-indent-shift-left                           :which-key "shift-left"       )
    "ir"     '(python-indent-shift-right                          :which-key "shift-right"      )
    "id"     '(python-indent-dedent-line                          :which-key "in/de~line"       )
    "ib"     '(python-indent-dedent-line-backspace                :which-key "backspace"        )

    "n"      '(                                                   :which-key "nav"              :ignore t)
    "nl"     '(python-nav-backward-up-list                        :which-key "nav-list"         )
    "nb"     '(python-nav-backward-block                          :which-key "backward-block"   )
    "nf"     '(python-nav-forward-block                           :which-key "forward-block"    )

    "s"      '(                                                   :which-key "sceleton"         :ignore t)
    "sc"     '(python-skeleton-class                              :which-key "class"            )
    "sd"     '(python-skeleton-def                                :which-key "def"              )
    "sf"     '(python-skeleton-for                                :which-key "for"              )
    "si"     '(python-skeleton-if                                 :which-key "if"               )
    "sm"     '(python-skeleton-import                             :which-key "import"           )
    "st"     '(python-skeleton-try                                :which-key "try"              )
    "sw"     '(python-skeleton-while                              :which-key "while"            )

    "t"      '(python-pytest-dispatch                             :which-key "test"             )

    ;; ""      '(completion-at-point                            :which-key ""                 )
    ;; ""      '(imenu                                          :which-key ""                 )
    ;; ""      '(prog-indent-sexp                               :which-key ""                 )
    ;; ""      '(python-check                                   :which-key ""                 )
    ;; ""      '(python-describe-at-point                       :which-key ""                 )
    ;; ""      '(python-eldoc-at-point                          :which-key ""                 )
    ;; ""      '(python-mark-defun                              :which-key ""                 )
    )
#+end_src

** shell
*** local-leader
#+begin_src elisp
  (fb/local-leader-key
    :keymaps 'inferior-python-mode-map
    :states  '(normal visual insert)

    "c"      '(comint-clear-buffer                                :which-key "clear"            )

    "pn"     '(comint-next-prompt                                 :which-key "next"             )
    "pp"     '(comint-previous-prompt                             :which-key "previous"         )

    ;; ""      '(backward-kill-word                                 :which-key ""        )
    ;; ""      '(comint-accumulate                                  :which-key ""        )
    ;; ""      '(comint-bol-or-process-mark                         :which-key ""        )
    ;; ""      '(comint-copy-old-input                              :which-key ""        )
    ;; ""      '(comint-delchar-or-maybe-eof                        :which-key ""        )
    ;; ""      '(comint-delete-output                               :which-key ""        )
    ;; ""      '(comint-dynamic-list-input-ring                     :which-key ""        )
    ;; ""      '(comint-get-next-from-history                       :which-key ""        )
    ;; ""      '(comint-history-isearch-backward-regexp             :which-key ""        )
    ;; ""      '(comint-insert-input                                :which-key ""        )
    ;; ""      '(comint-insert-previous-argument                    :which-key ""        )
    ;; ""      '(comint-interrupt-subjob                            :which-key ""        )
    ;; ""      '(comint-kill-input                                  :which-key ""        )
    ;; ""      '(comint-next-input                                  :which-key ""        )
    ;; ""      '(comint-next-matching-input-from-input              :which-key ""        )
    ;; ""      '(comint-previous-input                              :which-key ""        )
    ;; ""      '(comint-previous-matching-input-from-input          :which-key ""        )
    ;; ""      '(comint-quit-subjob                                 :which-key ""        )
    ;; ""      '(comint-send-eof                                    :which-key ""        )
    ;; ""      '(comint-send-input                                  :which-key ""        )
    ;; ""      '(comint-show-maximum-output                         :which-key ""        )
    ;; ""      '(comint-show-output                                 :which-key ""        )
    ;; ""      '(comint-stop-subjob                                 :which-key ""        )
    ;; ""      '(comint-write-output                                :which-key ""        )
    ;; ""      '(delete-forward-char                                :which-key ""        )
    ;; ""      '(evil-scroll-down                                   :which-key ""        )
    ;; ""      '(python-shell-completion-complete-or-indent         :which-key ""        )
    )
#+end_src
