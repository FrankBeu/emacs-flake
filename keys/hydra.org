* keys-hydra
** marker
#+begin_src elisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; keys-hydra
  ;;;;
  ;;
#+end_src
** hydra
#+begin_src elisp
  (use-package hydra)
#+end_src
** scale-text
*** hydra
#+begin_src elisp
  (defhydra hydra-text-scale (:timeout 5)
    "scale text"
    ("k" text-scale-increase "in")
    ("l" text-scale-decrease "out")
    ("q" nil "quit" :exit t))
#+end_src
*** binding
#+begin_src elisp
  (fb/leader-key
    "ts" '(hydra-text-scale/body :which-key "scale text"))
#+end_src
** evil-numbers
*** hydra
#+begin_src elisp
  (defhydra hydra-evil-numbers (:timeout 5)
    "evil-numbers"
    ("k" evil-numbers/inc-at-pt "+")
    ("l" evil-numbers/dec-at-pt "-")
    ("q" nil "quit" :exit t))
#+end_src
*** binding
#+begin_src elisp
  (fb/leader-key
    "n." '(hydra-evil-numbers/body :which-key "transient"))
#+end_src
** window
*** frame
#+begin_src elisp
  (defhydra hydra-window-frame (:color red)
    "Frame"
    ("k" make-frame "new frame")
    ("l" delete-frame "delete frame"))
#+end_src
*** size
#+begin_src elisp
  (defhydra hydra-window-size (:color red)
    "Windows size"
    ("j" shrink-window-horizontally "horizontal -")
    ("k" shrink-window "vertical -")
    ("l" enlarge-window "vertical +")
    (";" enlarge-window-horizontally "horizontal +"))
#+end_src
*** scroll
#+begin_src elisp
  (defun fb*scroll-other-window()
    (interactive)
    (scroll-other-window 1))
  (defun fb*scroll-other-window-down ()
    (interactive)
    (scroll-other-window-down 1))
  (defhydra hydra-window-scroll (:color red)
    "Scroll other window"
    ("k" fb*scroll-other-window "scroll")
    ("l" fb*scroll-other-window-down "scroll down"))
#+end_src
