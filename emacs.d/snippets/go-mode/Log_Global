# -*- mode: snippet -*-
# name:        Log_Global
# key:         lg
# contributor: fb
# --
package logger

import (
	"go.uber.org/zap"
	"go.uber.org/zap/zapcore"
)

var Logger *zap.Logger

//// USAGE:
//// put into MODULE/logger
//// import in main with
//// _ "MODULE/logger"

func init() {
	cfg := zap.Config{
		Encoding: "json",
		// Encoding: "console",
		Level: zap.NewAtomicLevelAt(zapcore.DebugLevel),
		OutputPaths: []string{"/home/frank/TMP/LOGS/$1"},
		OutputPaths: []string{"/home/frank/TMP/LOGS/$1", "stdout"},
		// OutputPaths: []string{"./log"},
		ErrorOutputPaths: []string{"stderr"},
		EncoderConfig: zapcore.EncoderConfig{
			MessageKey: "message",

			LevelKey:    "level",
			EncodeLevel: zapcore.CapitalLevelEncoder,
			// EncodeLevel: zapcore.LowercaseLevelEncoder,
			// EncodeLevel: zapcore.CapitalColorLevelEncoder,

			TimeKey:    "time",
			EncodeTime: zapcore.ISO8601TimeEncoder,

			// CallerKey:    "caller",
			// EncodeCaller: zapcore.ShortCallerEncoder,
		},
	}

	var err error
	Logger, err = cfg.Build()
	if err != nil {
		panic(err)
	}

	defer func() {
		lserr := Logger.Sync()
		if err == nil {
			err = lserr
		}
	}()

	zap.ReplaceGlobals(Logger)

	zap.S().Info("============================================================")
}
