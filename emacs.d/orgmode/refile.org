* orgmode-refile
** marker
#+begin_src elisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; orgmode-refile
  ;;;;
  ;;
#+end_src
** refile
**** create-hydra-refile
:PROPERTIES:
:URL-SOURCE: https://mollermara.com/blog/Fast-refiling-in-org-mode-with-hydras/
:END:
#+begin_src elisp
  (defmacro fb/make-org-refile-hydra (hydraname keyAndHeadline)
    "Make a hydra named HYDRANAME with refile targets to FILE."
    `(defhydra ,hydraname (:color blue :columns 6) "org-Refile-Hydra"
       ,@(cl-loop for kv in keyAndHeadline
                  collect (list (car kv) (list 'fb/refile (cdr kv)) (f-base(cdr kv))))
       ("q" nil "cancel"))
    )
#+end_src
**** refile
#+begin_src elisp
  (defun fb/refile (file &optional headline arg)
    (unless headline (setq headline "1  UNSORTIERTES"))
    ;; (message headline)
    (let ((pos (save-excursion
                 (find-file file)
                 (org-find-exact-headline-in-buffer headline))))
      (org-refile arg nil (list headline file nil pos)))
    (switch-to-buffer (current-buffer)))
#+end_src
**** daysForErledigtes
#+begin_src elisp
  (defun fb*getDayForErledigtes ()
    (pcase (format-time-string "%w" (current-time) )
      ("0" "SO")
      ("1" "MO")
      ("2" "DI")
      ("3" "MI")
      ("4" "DO")
      ("5" "FR")
      ("6" "SA")
      )
    )
#+end_src
**** hydra-command
#+begin_src elisp
    (defhydra fb/org-refile-hydra-grouped (:foreign-keys run :columns 2 :column "Horizontal")
      "Org-Refile"
      ("a" fb/org-refile-hydra-a/body "AI Anthroposophie Archlinux Art Astronomy"                          :exit t)
      ("b" fb/org-refile-hydra-b/body "Berufliches BigData Bike Browser"                                   :exit t)
      ("c" fb/org-refile-hydra-c/body "Computer Consoles Container+Cloud CSS"                              :exit t)
      ("d" fb/org-refile-hydra-d/body "Dart DB Debugging DEVOS"                                            :exit t)
      ("e" fb/org-refile-hydra-e/body "Editors emacs Embedded Energy Ernährung"                            :exit t)
      ;; ("f" fb/org-refile-hydra-f/body "" :exit t)
      ("g" fb/org-refile-hydra-g/body "Geographie Git Golang"                                              :exit t)
      ("h" fb/org-refile-hydra-h/body "Hardware Haushalt"                                                  :exit t)
      ("i" fb/org-refile-hydra-i/body "Infrastructure Installationen IoT"                                  :exit t)
      ;; ("j" fb/org-refile-hydra-j/body "" :exit t)
      ("k" fb/org-refile-hydra-k/body "Keyboard Klassifikation Körper"                                     :exit t)
      ("l" fb/org-refile-hydra-l/body "Lisp"                                                               :exit t)
      ("m" fb/org-refile-hydra-m/body "Maker Mathematik MeinLeben Mobile Music"                            :exit t)
      ("n" fb/org-refile-hydra-n/body "Network NixOS"                                                      :exit t)
      ("o" fb/org-refile-hydra-o/body "OperatingSystems OrgMode"                                           :exit t)
      ("p" fb/org-refile-hydra-p/body "Personal Pflanzen Planning Programming Projects Psychologie Python" :exit t)
      ;; ("q" fb/org-refile-hydra-q/body "" :exit t)
      ("r" fb/org-refile-hydra-r/body "ReadTheDocs RedHat Religion Rust"                                   :exit t)
      ("s" fb/org-refile-hydra-s/body "Schrift Search Security Sprachen SUSE"                              :exit t)
      ("t" fb/org-refile-hydra-t/body "Technology Testing Tools"                                           :exit t)
      ;; ("u" fb/org-refile-hydra-u/body "" :exit t)
      ("v" fb/org-refile-hydra-v/body "Virtualisation VirtualReality"                                      :exit t)
      ("w" fb/org-refile-hydra-w/body "Web Welt"                                                           :exit t)
      ;; ("x" fb/org-refile-hydra-x/body "" :exit t)
      ("y" fb/org-refile-hydra-y/body "Yoga"                                                               :exit t)
      ("z" fb/org-refile-hydra-z/body "Zukunft"                                                            :exit t)

      ("E" (fb/refile "AKTUELLES.org" (fb*getDayForErledigtes) ) "Erledigtes->aktueller Wochentag"         :exit t)

      ("0" fb/org-refile-hydra-0/body "〇"                                                                 :exit t)

      ("j" org-refile-goto-last-stored "Jump to last refile"                                               :exit t)
      ("q" nil "cancel")
      )
#+end_src
**** hydras
#+begin_src elisp
  (fb/make-org-refile-hydra fb/org-refile-hydra-a
                            (
                             ("i" . "PROJECTS/AI.org"            )
                             ("s" . "PROJECTS/Anthroposophie.org")
                             ("l" . "PROJECTS/Archlinux.org"     )
                             ("r" . "PROJECTS/Art.org"           )
                             ("t" . "PROJECTS/Astronomy.org"     )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-b
                            (
                             ("r" . "PROJECTS/Berufliches.org")
                             ("d" . "PROJECTS/BigData.org"    )
                             ("k" . "PROJECTS/Bike.org"       )
                             ("s" . "PROJECTS/Browser.org"    )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-c
                            (
                             ("p" . "PROJECTS/Computer.org"      )
                             ("l" . "PROJECTS/Consoles.org"      )
                             ("c" . "PROJECTS/ContainerCloud.org")
                             ("r" . "PROJECTS/Crypto.org"        )
                             ("s" . "PROJECTS/CSS.org"           )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-d
                            (
                             ("a" . "PROJECTS/Dart.org"     )
                             ("b" . "PROJECTS/DataBases.org")
                             ("g" . "PROJECTS/Debugging.org")
                             ("o" . "PROJECTS/DEVOS.org"    )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-e
                            (
                             ("m" . "PROJECTS/emacs.org"    )
                             ("d" . "PROJECTS/Editors.org"  )
                             ("b" . "PROJECTS/Embedded.org" )
                             ("g" . "PROJECTS/Energy.org"   )
                             ("n" . "PROJECTS/Ernährung.org")
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-g
                            (
                             ("g" . "PROJECTS/Geographie.org")
                             ("t" . "PROJECTS/Git.org"       )
                             ("o" . "PROJECTS/Golang.org"    )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-h
                            (
                             ("w" . "PROJECTS/Hardware.org")
                             ("h" . "PROJECTS/Haushalt.org")
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-i
                            (
                             ("s" . "PROJECTS/Infrastructure.org")
                             ("l" . "PROJECTS/Installation.org"  )
                             ("t" . "PROJECTS/IoT.org"           )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-k
                            (
                             ("b" . "PROJECTS/Keyboard.org"      )
                             ("k" . "PROJECTS/Klassifikation.org")
                             ("p" . "PROJECTS/Körper.org"        )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-l
                            (
                             ("i" . "PROJECTS/Lisp.org")
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-m
                            (
                             ("a" . "PROJECTS/Maker.org"     )
                             ("m" . "PROJECTS/Mathematik.org")
                             ("l" . "PROJECTS/MeinLeben.org" )
                             ("b" . "PROJECTS/Mobile.org"    )
                             ("u" . "PROJECTS/Music.org"     )
                             )
                            )
  (fb/make-org-refile-hydra fb/org-refile-hydra-n
                            (
                             ("w" . "PROJECTS/Network.org")
                             ("x" . "PROJECTS/NixOS.org"  )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-o
                            (
                             ("s" . "PROJECTS/OperatingSystems.org")
                             ("m" . "PROJECTS/OrgMode.org"         )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-p
                            (
                             ("s" . "PROJECTS/Personal.org"   )
                             ("f" . "PROJECTS/Pflanzen.org"   )
                             ("l" . "PROJECTS/Planning.org"   )
                             ("g" . "PROJECTS/Programming.org")
                             ("j" . "PROJECTS/Projects.org"   )
                             ("i" . "PROJECTS/Psychologie.org")
                             ("y" . "PROJECTS/Python.org"     )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-r
                            (
                             ("d" . "PROJECTS/ReadTheDocs.org")
                             ("h" . "PROJECTS/RedHat.org"     )
                             ("l" . "PROJECTS/Religion.org"   )
                             ("u" . "PROJECTS/Rust.org"       )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-s
                            (
                             ("t" . "PROJECTS/Schrift.org" )
                             ("e" . "PROJECTS/Search.org"  )
                             ("c" . "PROJECTS/Security.org")
                             ("p" . "PROJECTS/Sprachen.org")
                             ("u" . "PROJECTS/SUSE.org"    )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-t
                            (
                             ("c" . "PROJECTS/Technology.org")
                             ("e" . "PROJECTS/Testing.org"   )
                             ("o" . "PROJECTS/Tools.org"     )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-v
                            (
                             ("i" . "PROJECTS/Virtualisation.org")
                             ("r" . "PROJECTS/VirtualReality.org" )
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-w
                            (
                             ("e" . "PROJECTS/Web.org" )
                             ("l" . "PROJECTS/Welt.org")
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-y
                            (
                             ("g" . "PROJECTS/Yoga.org")
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-z
                            (
                             ("k" . "PROJECTS/Zukunft.org")
                             ))
  (fb/make-org-refile-hydra fb/org-refile-hydra-0
                            (
                             ("1" . "〇/1  UNSORTIERTES.org"  )
                             ("2" . "〇/2  IDEEN.org"         )
                             ("3" . "〇/3  FRAGEN.org"        )
                             ("4" . "〇/4  RECHERCHE.org"     )
                             ("5" . "〇/5  BIBLIO~.org"       )
                             ("6" . "〇/6  I.org"             )
                             ("7" . "〇/7  ToDO.org"          )
                             ("f" . "〇/7a ANSCHAFFUNGEN.org" );;; 7a FUNDUS
                             ("8" . "〇/8  INSTALLATIONEN.org")
                             ("9" . "〇/9  ROUTINEN.org"      )
                             ("0" . "〇/10 ERKENNTNISSE.org"  )
                             ("e" . "〇/11 ERLEDIGTES.org"    )
                             ))
#+end_src
