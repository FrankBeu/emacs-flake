* languages-nix
** marker
#+begin_src elisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; languages-nix
  ;;;;
  ;;
#+end_src
*** XOR
**** RNIX-LSP
***** nix-mode
#+BEGIN_SRC elisp :tangle no :exports none
  (use-package nix-mode
    :mode "\\.nix\\'"
    :hook (
           (nix-mode . company-mode)
           (nix-mode . lsp-deferred)
           (nix-mode . fb*default-company-backends-h)
           )
    )
#+END_SRC
****** configuration
#+BEGIN_SRC elisp :tangle no :exports none
  (add-to-list 'lsp-language-id-configuration '(nix-mode . "nix"))
  (lsp-register-client
   (make-lsp-client :new-connection (lsp-stdio-connection '("rnix-lsp"))
                    :major-modes '(nix-mode)
                    :server-id 'nix)
   )
#+END_SRC
**** nil
#+BEGIN_SRC elisp
  (use-package lsp-nix
    ;; :ensure lsp-mode
    :after (lsp-mode)
    :demand t
    :custom
    (lsp-nix-nil-formatter ["nixpkgs-fmt"]))

  (use-package nix-mode
    :hook (nix-mode . lsp-deferred)
    ;; :ensure t
    )
#+END_SRC
** INFO
*** debug
#+begin_example shell
  bash -c "env RUST_LOG=trace rnix-lsp 2> /tmp/rnix-lsp.log"
#+end_example
