* orgmode-capture
** marker
#+begin_src elisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; orgmode-capture
  ;;;;
  ;;
#+end_src
** capture
*** INFO
https://orgmode.org/manual/Template-expansion.html#Template-expansion
*** package
#+begin_src elisp
(use-package org-protocol)
#+end_src
*** start capturing in insert-state
#+begin_src elisp
(add-hook 'org-capture-mode-hook 'evil-insert-state)
#+end_src
*** note file
#+begin_src elisp
(defvar fb*noteFile "~/NOTES/AKTUELLES.org" "Target file for org-capture")
#+end_src
*** templates
**** variable
#+begin_src elisp
(setq org-capture-templates '())
#+end_src
**** PROTOCOL
***** with selection
#+begin_src elisp
  (setq webSelection-templates '(
    ("P" "Protocol Link" entry (file+olp fb*noteFile "〇" "1  UNSORTIERTES")
      "* %?\n[[%:link][%(fb\\*transform-square-brackets-to-round-ones \"%:description\")]]\n#+BEGIN_QUOTE\n%i\n#+END_QUOTE")
    ))
  (setq org-capture-templates (append org-capture-templates webSelection-templates))
#+end_src
***** without selection
#+begin_src elisp
  (setq webWithoutSelection-templates '(
    ("L" "Protocol Link" entry (file+olp fb*noteFile "〇" "1  UNSORTIERTES")
      "* %? [[%:link][%(fb\\*transform-square-brackets-to-round-ones \"%:description\")]]\n")
    ))
  (setq org-capture-templates (append org-capture-templates webWithoutSelection-templates))
#+end_src
***** FUNDUS
****** ask for *Title*
#+begin_src elisp :tangle no
  ;; ("P" "Protocol Link" entry (file+olp fb*noteFile "〇" "1  UNSORTIERTES")
  ;; "* %^{Title}\n[[%:link][%(fb\\*transform-square-brackets-to-round-ones \"%:description\")]]\n#+BEGIN_QUOTE\n%i\n#+END_QUOTE\n%?")
#+end_src
**** AKTUELLES
#+begin_src elisp
  (setq aktuelles-templates '(
                              ("ak" "AKTUELLES"      entry (file+headline fb*noteFile "AKTUELLES") "* %i%?\n")
                              ("ad" "AKTUELLES TODO" entry (file+headline fb*noteFile "AKTUELLES") "* TODO %i%?\n")
                              ))
  (setq org-capture-templates (append org-capture-templates aktuelles-templates))
#+end_src
**** PROJECTS
#+begin_src elisp
    (setq project-templates '(
      ("a" "AKTUELLES AI Anthroposophie Archlinux Art Astronomy")
      ("ai" "AI"               entry (file+olp fb*noteFile "PROJECTS" "AI"               ) "* %i%?\n")
      ("as" "Anthroposophie"   entry (file+olp fb*noteFile "PROJECTS" "Anthroposophie"   ) "* %i%?\n")
      ("al" "Archlinux"        entry (file+olp fb*noteFile "PROJECTS" "Archlinux"        ) "* %i%?\n")
      ("ar" "Art"              entry (file+olp fb*noteFile "PROJECTS" "Art"              ) "* %i%?\n")
      ("at" "Astronomy"        entry (file+olp fb*noteFile "PROJECTS" "Astronomy"        ) "* %i%?\n")

      ("b" "Berufliches BigData Browser")
      ("br" "Berufliches"      entry (file+olp fb*noteFile "PROJECTS" "Berufliches"      ) "* %i%?\n")
      ("bd" "BigData"          entry (file+olp fb*noteFile "PROJECTS" "BigData"          ) "* %i%?\n")
      ("bs" "Browser"          entry (file+olp fb*noteFile "PROJECTS" "Browser"          ) "* %i%?\n")

      ("c" "Computer Consoles Container+Cloud CSS")
      ("cp" "Computer"         entry (file+olp fb*noteFile "PROJECTS" "Computer"         ) "* %i%?\n")
      ("cl" "Consoles"         entry (file+olp fb*noteFile "PROJECTS" "Consoles"         ) "* %i%?\n")
      ("cc" "Container+Cloud"  entry (file+olp fb*noteFile "PROJECTS" "Container+Cloud"  ) "* %i%?\n")
      ("cs" "CSS"              entry (file+olp fb*noteFile "PROJECTS" "CSS"              ) "* %i%?\n")

      ("d" "Dart DB Debugging")
      ("da" "Dart"             entry (file+olp fb*noteFile "PROJECTS" "Dart"             ) "* %i%?\n")
      ("db" "DataBases"        entry (file+olp fb*noteFile "PROJECTS" "DataBases"        ) "* %i%?\n")
      ("dg" "Debugging"        entry (file+olp fb*noteFile "PROJECTS" "Debugging" "EVENTS") "%i**** %^{EVENT}
  \***** SITUATION/SETUP
    %^{SITUATION}
  \***** MESSAGE
    %x
  \***** PROBLEM / CAUSE
    %^{PROBLEM}
  \***** SOLUTION
    %?
    ")
      ("e" "Editors emacs Embedded Energy Ernährung")
      ("em" "emacs"            entry (file+olp fb*noteFile "PROJECTS" "emacs"            ) "* %i%?\n")
      ("ed" "Editors"          entry (file+olp fb*noteFile "PROJECTS" "Editors"          ) "* %i%?\n")
      ("eb" "embedded"         entry (file+olp fb*noteFile "PROJECTS" "embedded"         ) "* %i%?\n")
      ("eg" "Energy"           entry (file+olp fb*noteFile "PROJECTS" "Energy"           ) "* %i%?\n")
      ("en" "Ernährung"        entry (file+olp fb*noteFile "PROJECTS" "Ernährung"        ) "* %i%?\n")

      ("g" "Geographie Git Golang")
      ("gg" "Geographie"       entry (file+olp fb*noteFile "PROJECTS" "Geographie"       ) "* %i%?\n")
      ("gt" "Git"              entry (file+olp fb*noteFile "PROJECTS" "Git"              ) "* %i%?\n")
      ("go" "Golang"           entry (file+olp fb*noteFile "PROJECTS" "Golang"           ) "* %i%?\n")

      ("h" "Hardware Haushalt")
      ("hw" "Hardware"         entry (file+olp fb*noteFile "PROJECTS" "Hardware"         ) "* %i%?\n")
      ("hh" "Haushalt"         entry (file+olp fb*noteFile "PROJECTS" "Haushalt"         ) "* %i%?\n")

      ("i" "Infrastructure Installationen IoT")
      ("is" "Infrastructure"   entry (file+olp fb*noteFile "PROJECTS" "Infrastructure"   ) "* %i%?\n")
      ("il" "Installation"     entry (file+olp fb*noteFile "PROJECTS" "Installation"     ) "* %i%?\n")
      ("it" "IoT"              entry (file+olp fb*noteFile "PROJECTS" "IoT"              ) "* %i%?\n")

      ("k" "Keyboard Klassifikation Körper")
      ("kb" "Keyboard"         entry (file+olp fb*noteFile "PROJECTS" "Keyboard"         ) "* %i%?\n")
      ("kk" "Klassifikation"   entry (file+olp fb*noteFile "PROJECTS" "Klassifikation"   ) "* %i%?\n")
      ("kp" "Körper"           entry (file+olp fb*noteFile "PROJECTS" "Körper"           ) "* %i%?\n")

      ("l" "Lisp")
      ("li" "Lisp"             entry (file+olp fb*noteFile "PROJECTS" "Lisp"             ) "* %i%?\n")

      ("m" "Maker Mathematik MeinLeben Mobile Music")
      ("ma" "Maker"            entry (file+olp fb*noteFile "PROJECTS" "Maker"            ) "* %i%?\n")
      ("mm" "Mathematik"       entry (file+olp fb*noteFile "PROJECTS" "Mathematik"       ) "* %i%?\n")
      ("ml" "MeinLeben"        entry (file+olp fb*noteFile "PROJECTS" "MeinLeben"        ) "* %i%?\n")
      ("mb" "Mobile"           entry (file+olp fb*noteFile "PROJECTS" "Mobile"           ) "* %i%?\n")
      ("mu" "Music"            entry (file+olp fb*noteFile "PROJECTS" "Music"            ) "* %i%?\n")

      ("n" "Network NixOS")
      ("nw" "Network"          entry (file+olp fb*noteFile "PROJECTS" "Network"          ) "* %i%?\n")
      ("nx" "NixOS"            entry (file+olp fb*noteFile "PROJECTS" "NixOS"            ) "* %i%?\n")

      ("o" "OperatingSystems OrgMode")
      ("os" "OperatingSystems" entry (file+olp fb*noteFile "PROJECTS" "OperatingSystems" ) "* %i%?\n")
      ("om" "OrgMode"          entry (file+olp fb*noteFile "PROJECTS" "OrgMode"          ) "* %i%?\n")

      ("p" "Personal Pflanzen Planning Programming Projects Psychologie Python")
      ("ps" "Personal"         entry (file+olp fb*noteFile "PROJECTS" "Personal"         ) "* %i%?\n")
      ("pf" "Pflanzen"         entry (file+olp fb*noteFile "PROJECTS" "Pflanzen"         ) "* %i%?\n")
      ("pl" "Planning"         entry (file+olp fb*noteFile "PROJECTS" "Planning"         ) "* %i%?\n")
      ("pg" "Programming"      entry (file+olp fb*noteFile "PROJECTS" "Programming"      ) "* %i%?\n")
      ("pj" "Projects"         entry (file+olp fb*noteFile "PROJECTS" "Projects"         ) "* %i%?\n")
      ("pi" "Psychologie"      entry (file+olp fb*noteFile "PROJECTS" "Psychologie"      ) "* %i%?\n")
      ("py" "Python"           entry (file+olp fb*noteFile "PROJECTS" "Python"           ) "* %i%?\n")

      ("r" "ReadTheDocs Religion Rust")
      ("rd" "ReadTheDocs"      entry (file+olp fb*noteFile "PROJECTS" "ReadTheDocs"      ) "* %i%?\n")
      ("rl" "Religion"         entry (file+olp fb*noteFile "PROJECTS" "Religion"         ) "* %i%?\n")
      ("ru" "Rust"             entry (file+olp fb*noteFile "PROJECTS" "Rust"             ) "* %i%?\n")

      ("s" "Schrift Search Security Sprachen")
      ("st" "Schrift"          entry (file+olp fb*noteFile "PROJECTS" "Schrift"          ) "* %i%?\n")
      ("se" "Search"           entry (file+olp fb*noteFile "PROJECTS" "Search"           ) "* %i%?\n")
      ("sc" "Security"         entry (file+olp fb*noteFile "PROJECTS" "Security"         ) "* %i%?\n")
      ("sp" "Sprachen"         entry (file+olp fb*noteFile "PROJECTS" "Sprachen"         ) "* %i%?\n")

      ("t" "Technology Testing Tools")
      ("tc" "Technology"       entry (file+olp fb*noteFile "PROJECTS" "Technology"       ) "* %i%?\n")
      ("te" "Testing"          entry (file+olp fb*noteFile "PROJECTS" "Testing"          ) "* %i%?\n")
      ("to" "Tools"            entry (file+olp fb*noteFile "PROJECTS" "Tools"            ) "* %i%?\n")

      ("v" "Virtualisierung VirtualReality")
      ("vi" "Virtualisierung"  entry (file+olp fb*noteFile "PROJECTS" "Virtualisierung"  ) "* %i%?\n")
      ("vr" "VirtualReality"   entry (file+olp fb*noteFile "PROJECTS" "VirtualReality"   ) "* %i%?\n")

      ("w" "Web Welt")
      ("we" "Web"              entry (file+olp fb*noteFile "PROJECTS" "Web"              ) "* %i%?\n")
      ("wl" "Welt"             entry (file+olp fb*noteFile "PROJECTS" "Welt"             ) "* %i%?\n")

      ("y" "Yoga")
      ("yg" "Yoga"             entry (file+olp fb*noteFile "PROJECTS" "Yoga"             ) "* %i%?\n")

      ("z" "Zukunft")
      ("zk" "Zukunft"          entry (file+olp fb*noteFile "PROJECTS" "Zukunft"          ) "* %i%?\n")
      ))
      (setq org-capture-templates (append org-capture-templates project-templates))
#+end_src
**** CURRENT-ITEM-CLOCKED-IN
#+begin_src elisp
  (setq clock-template '(("ck" "clock" entry (clock) "* %i%?\n")))
  (setq org-capture-templates (append org-capture-templates clock-template))
#+end_src
**** 〇
#+begin_src elisp
  (setq 〇-templates '(
    ("1" "UNSORTIERTES"   entry (file+olp fb*noteFile "〇" "1  UNSORTIERTES"                  ) "* %i%?\n")
    ("2" "IDEEN"          entry (file+olp fb*noteFile "〇" "2  IDEEN"                         ) "* %i%?\n")
    ("3" "FRAGEN"         entry (file+olp fb*noteFile "〇" "3  FRAGEN"                        ) "* %i%?\n")
    ("4" "RECHERCHE"      entry (file+olp fb*noteFile "〇" "4  RECHERCHE"                     ) "* %i%?\n")
    ("5" "BIBLIO~"        entry (file+olp fb*noteFile "〇" "5  BIBLIO~"                       ) "* %i%?\n")
    ("6" "I"              entry (file+olp fb*noteFile "〇" "6  I"                             ) "* %i%?\n")
    ("7" "ToDO"           entry (file+olp fb*noteFile "〇" "7  ToDO"                          ) "* TODO %i%?\n")
    ("A" "ANSCHAFFUNGEN"  entry (file+olp fb*noteFile "〇" "7a ANSCHAFFUNGEN"                 ) "* %i%?\n")
    ("8" "INSTALLATIONEN" entry (file+olp fb*noteFile "〇" "8  INSTALLATIONEN"                ) "* %i%?\n")
    ("9" "ROUTINEN"       entry (file+olp fb*noteFile "〇" "9  ROUTINEN + EVENTS + TRIGGERED" ) "* %i%?\n")
    ("0" "ERKENNTNISSE"   entry (file+olp fb*noteFile "〇" "10 ERKENNTNISSE"                  ) "* %i%?\n")
    ("E" "ERLEDIGTES"     entry (file+olp fb*noteFile "〇" "11 ERLEDIGTES"                    ) "* %i%?\n")
    ))
    (setq org-capture-templates (append org-capture-templates 〇-templates))
#+end_src
**** FUNDUS
#+begin_src elisp
;;;; TODO: ask for headline location
  ;; ("p" "projects" entry
  ;; (file+function fb*noteFile org-ask-location)
  ;; "\n\n** %?\n<%<%Y-%m-%d %a %T>>"
  ;; :empty-lines 1)
#+end_src
*** TODO org-protocol-capture-html
check if this is a replacement or an addition
https://github.com/alphapapa/org-protocol-capture-html
