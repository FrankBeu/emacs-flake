* orgmode-agenda
** marker
#+begin_src elisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; orgmode-agenda
  ;;;;
  ;;
#+end_src
** agenda
*** files
directory-bound
#+begin_src elisp
  (setq org-agenda-files '(
                           "~/NOTES"
                           "~/NOTES/〇"
                           ;; "~/NOTES/PROJECTS"
                           ))
#+end_src
**** FUNDUS
#+begin_src elisp :tangle no
;; (setq org-agenda-files '(
;;                          "/home/frank/GTD/inbox.org"
;;                          "/home/frank/GTD/gtd.org"
;;                          "/home/frank/GTD/tickler.org"
;;                          ))
#+end_src
*** deadline
**** notifications
#+begin_src elisp
  (setq org-deadline-warning-days 14)
#+end_src
*** time-grid
#+begin_src elisp
(setq org-agenda-time-grid
      '((daily today require-timed)
        (0000 0200 0400 0600 0800 1000 1200 1400 1600 1800 2000 2200)
        "······" "────────────────"))
#+end_src
***** FUNDUS
#+begin_src elisp :tangle no
;; (setq org-agenda-time-grid
;;       '((daily today require-timed)
;;         (0000 0200 0400 0600 0800 1000 1200 1400 1600 1800 2000 2200)
;;         "......" "----------------"))
#+end_src
*** log
**** show agenda with activated log-mode
#+begin_src elisp
  (setq org-agenda-start-with-log-mode nil)
#+end_src
**** log-into-drawer
#+begin_src elisp
  (setq org-log-into-drawer t)
#+end_src
***** FUNDUS
#+begin_src elisp :tangle no
;; (setq org-log-into-drawer 'LOGBOOK)
#+end_src
**** entry
#+begin_src elisp
  (setq org-log-done 'note)
#+end_src
** TODO priority
    6 is used as defaultstate for all nodes not given a priority/importance
#+begin_src elisp :tangle no
;; (setq org-highest-priority ?1)
;; (setq org-lowest-priority ?6)
;; (setq org-default-priority ?6)
#+end_src
*** faces
#+begin_src elisp
  (setq org-priority-faces
    `(
      (?A :foreground ,(fb*getDefaultColorValue :red)    :background ,(fb*getDefaultColorValue :bg))
      (?B :foreground ,(fb*getDefaultColorValue :orange) :background ,(fb*getDefaultColorValue :bg))
      (?C :foreground ,(fb*getDefaultColorValue :yellow) :background ,(fb*getDefaultColorValue :bg))
      ))
#+end_src
** states
*** keywords
! is responsible for inserting timestamp @ for notes
#+begin_src elisp
(setq org-todo-keywords
  '(
    (sequence "TODO(t!)"   "PENDING(p!)"   "NEXT(n!)"   "WIP(w!)"                  "|" "DONE(d@/!)" "CANCELLED(c@/!)" "DEPRECATED(e@/!)" "ARCHIVED(a)")
    (sequence "CRASH(C)"   "BUG(B)"        "REQUEST(R)" "TEST(E)"                  "|" "FIXED(F)"                                                     )
    (sequence "BACKLOG(O)" "KONZEPTION(K)" "BEREIT(T)"  "UMSETZUNG(U)" "ABNAHME(A)" "LIVE(L)" "|" "ERLEDIGT(D)"                                       )
    (sequence " (N)") ;;;; placeholder -> last line is not shown in buffer properly
    )
  )
#+end_src
#+begin_example elisp
    ;; (sequence "TODO(t)" "SUBTREE(s)" "WAIT(w@/!)" "|" "DONE(d!)" "CANCELLED(c@/!)")
    ;; (sequence " (N)") ;;;; placeholder -> last line is not shown in buffer properly
#+end_example
*** faces
#+begin_src elisp
    (setq org-todo-keyword-faces
          (list
            `("TODO"       . (:foreground ,(fb*getDefaultColorValue :orange   ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("PENDING"    . (:foreground ,(fb*getDefaultColorValue :yellow   ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("NEXT"       . (:foreground ,(fb*getDefaultColorValue :red      ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("WIP"        . (:foreground ,(fb*getDefaultColorValue :dark-blue) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("DONE"       . (:foreground ,(fb*getDefaultColorValue :green    ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("CANCELLED"  . (:foreground ,(fb*getDefaultColorValue :base5    ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("DEPRECATED" . (:foreground ,(fb*getDefaultColorValue :base5    ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("ARCHIVED"   . (:foreground ,(fb*getDefaultColorValue :base5    ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))

            `("CRASH"      . (:foreground ,(fb*getDefaultColorValue :red      ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("BUG"        . (:foreground ,(fb*getDefaultColorValue :orange   ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("REQUEST"    . (:foreground ,(fb*getDefaultColorValue :cyan     ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("TEST"       . (:foreground ,(fb*getDefaultColorValue :blue     ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("FIXED"      . (:foreground ,(fb*getDefaultColorValue :green    ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))

            `("BACKLOG"    . (:foreground ,(fb*getDefaultColorValue :cyan     ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("KONZEPTION" . (:foreground ,(fb*getDefaultColorValue :orange   ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("BEREIT"     . (:foreground ,(fb*getDefaultColorValue :red      ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("UMSETZUNG"  . (:foreground ,(fb*getDefaultColorValue :dark-blue) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("ABNAHME"    . (:foreground ,(fb*getDefaultColorValue :yellow   ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("LIVE"       . (:foreground ,(fb*getDefaultColorValue :red      ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            `("ERLEDIGT"   . (:foreground ,(fb*getDefaultColorValue :green    ) :weight bold :background ,(fb*getDefaultColorValue :bg-alt)))
            )
          )
#+end_src
** TODO FUNDUS
:LOGBOOK:
- State "TODO"       from              [2021-02-01 Mon 13:28]
:END:
#+begin_src elisp :tangle no
;; (setq org-agenda-category-icon-alist
;;       ;; `(("org" ,(list (all-the-icons-faicon "cogs")) nil nil :ascent center)))
;;       `(
;;         ("todo" ,(list (all-the-icons-material "check_box" :height 1.2)) nil nil :ascent center)
;;         ("task" ,(list (all-the-icons-material "check_box" :height 1.2)) nil nil :ascent center)
;;         ;; ("amazon" ,(list (all-the-icons-faicon "amazon" :height 1.2 :face 'all-the-icons-dorange)) nil nil :ascent center)
;;         ("amazon" ,(list (all-the-icons-faicon "amazon" :height 1 :face 'all-the-icons-orange)) nil nil :ascent center)
;;         ))
#+end_src
*** TODO IMPORTANCE
:LOGBOOK:
- State "TODO"       from              [2021-02-01 Mon 13:28]
:END:
(without temporal relation)
#+begin_src elisp :tangle no
;; (setq org-agenda-custom-commands
;;       '(
;;         ("1" "PRIORITY 1" tags "PRIORITY=\"1\"")
;;         ("2" "PRIORITY 2" tags "PRIORITY=\"2\"")
;;         ("3" "PRIORITY 3" tags "PRIORITY=\"3\"")
;;         ("4" "PRIORITY 4" tags "PRIORITY=\"4\"")
;;         ("5" "PRIORITY 5" tags "PRIORITY=\"5\"")
;;         ("c" "Desk Work" tags-todo "computer" ;; (1) (2) (3) (4)
;;          ((org-agenda-files '("~/org/widgets.org" "~/org/clients.org")) ;; (5)
;;           (org-agenda-sorting-strategy '(priority-up effort-down))) ;; (5) cont.
;;          ("~/computer.html")) ;; (6)
;;         ))
;; ;; agenda view
;; ;; (setq org-agenda-start-day "-1d")
;; (setq org-agenda-start-on-weekday nil)
;; (setq org-agenda-span 14)
#+end_src
#+begin_src elisp :tangle no
;; ;;;; do not insert when state is changed to DONE:
;; ;;;; CLOSED: [2020-04-30 Thu 23:39]
;; (setq org-log-done nil)

;; ;;;; dependency between TODO-items
;; (require 'org-depend)

;; (defun own-add-todo-cookie ()
;;   "add a TODO-COOKIE to current line"
;;   (interactive)
;;   (goto-char (line-end-position))
;;   (insert " [/]")
;;   (beginning-of-line)
;;   (org-update-statistics-cookies ())
;;   )
#+end_src
*** TODO urgency
#+begin_src elisp
#+end_src
** TODO org-ql
:LOGBOOK:
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:19]
- State "TODO"       from              [2021-02-01 Mon 07:13]
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:05]
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:05]
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:05]
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:05]
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:04]
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:04]
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:03]
- State "TODO"       from "TODO"       [2021-02-01 Mon 07:03]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:55]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:54]
- State "TODO"       from              [2021-02-01 Mon 06:51]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:51]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:50]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:50]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:48]
- State "TODO"       from              [2021-02-01 Mon 06:48]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:48]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:48]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:48]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:47]
- State "TODO"       from "TODO"       [2021-02-01 Mon 06:47]
- State "TODO"       from              [2021-02-01 Mon 06:39]
- State "TODO"       from              [2021-02-01 Mon 06:39]
- State "TODO"       from              [2021-02-01 Mon 06:38]
:END:
https://github.com/alphapapa/org-ql
** TODO org-habit
