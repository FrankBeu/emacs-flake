* view-font
** marker
#+begin_src elisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; view-font
  ;;;;
  ;;
#+end_src
** INFO
*** docs
https://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts
*** list all system-available fonts
#+begin_src shell :results drawer
fc-cache -fv
#+end_src
*** list all emacs-available fonts
in *scratch-buffer* enter :
~(font-family-list)~ =C-j=
*** list font-face under cursor
=C-u C-x ==
*** list available font-faces
=M-x= ~describe-face~ =C-l= org =TAB=
=M-x= ~de fa~ =C-l= =TAB=
*** show list of all defined faces
=M-x= ~list-faces-display~
*** font-spec UNUSED
#+begin_example elisp
  (font-spec :family "Input Mono Narrow" :size 12 :weight 'semi-light)
  (font-spec :family "Fira Sans"                                     )
  (font-spec :family "Input Mono Narrow" :size 12                    )
  (font-spec :family "Fira Mono"         :size 19                    )
#+end_example
** TODO TODOS
*** Keyword Highlightion
**** orgmode
***** :tangle no
** definitions
*** fontsize
#+begin_src elisp
  (defvar fb-default-font-size 160) ;; height/10 â‰™ px
#+end_src
*** font-name
#+begin_src elisp
  (defvar fb-default-font-name-mono  "Roboto Mono")
  (defvar fb-default-font-name-sans  "Roboto"     )
  (defvar fb-default-font-name-serif "Noto Serif" )
#+end_src
**** FUNDUS
***** mono
#+begin_example elisp
  ;; (defvar fb-default-font-name-mono "Noto Sans Mono"  )
  ;; (defvar fb-default-font-name-mono "DejaVu Sans Mono")
  ;; (defvar fb-default-font-name-mono "Iosevka Term"    )
  ;; (defvar fb-default-font-name-mono "Hack"            )
  ;; (defvar fb-default-font-name-mono "Fira Code"       )
#+end_example
***** sans
#+begin_example elisp
  ;; (defvar fb-default-font-name-sans  "")
#+end_example
***** serif
#+begin_example elisp
  ;; (defvar fb-default-font-name-serif "")
#+end_example
**** fira-code-mode
view ./packages.el : [[file:~/.emacs.d/global/packages.org::*fira-code-mode][fira-code-mode]]
*** frame-font UNUSED
**** definition
#+begin_src elisp :tangle no
  ;; (defvar fb-default-font-mono  (cons 'font (concat fb-default-font-name-mono  "-" (number-to-string (/ fb-default-font-size 10)))))
  ;; (defvar fb-default-font-sans  (cons 'font (concat fb-default-font-name-sans  "-" (number-to-string (/ fb-default-font-size 10)))))
  ;; (defvar fb-default-font-serif (cons 'font (concat fb-default-font-name-serif "-" (number-to-string (/ fb-default-font-size 10)))))
#+end_src
**** setting
#+begin_src elisp :tangle no
  ;; (add-to-list 'default-frame-alist fb-default-font-mono)
  ;; (add-to-list 'initial-frame-alist fb-default-font-mono)
#+end_src
*** typefaces
**** typeface-default
set the default-face-attribute
#+begin_src elisp
  (defvar fb-default-typeface fb-default-font-name-mono )
  ;; (defvar fb-default-typeface fb-default-font-name-sans )
  ;; (defvar fb-default-typeface fb-default-font-name-serif)
#+end_src
**** typeface-mono
set the fixed-pitch-face-attribute
#+begin_src elisp
  (defvar fb-default-typeface-fixed fb-default-font-name-mono )
#+end_src
**** typeface-variable CHOOSE: SANS  --  SERIF
set the variable-pitch-face-attribute
#+begin_src elisp
  (defvar fb-default-typeface-variable fb-default-font-name-sans )
  ;; (defvar fb-default-typeface-variable fb-default-font-name-serif)
#+end_src
*** font-faces
#+begin_src elisp
  (with-eval-after-load 'org
    (set-face-attribute 'default        nil :font fb-default-typeface          :height fb-default-font-size)
    (set-face-attribute 'fixed-pitch    nil :font fb-default-typeface-fixed    :foreground nil             )
    (set-face-attribute 'variable-pitch nil :font fb-default-typeface-variable :foreground nil             )
    )
#+end_src
**** FUNDUS
#+begin_example elisp
  ;; (copy-face 'default 'fixed-pitch)
#+end_example
** org
*** font-faces
**** headings
Increase the size of various headings
#+begin_src elisp
  (with-eval-after-load 'org
    (dolist (face '((org-level-1 . 1.75 )
                    (org-level-2 . 1.5  )
                    (org-level-3 . 1.25 )
                    (org-level-4 . 1.175)
                    (org-level-5 . 1.15 )
                    (org-level-6 . 1.1  )
                    (org-level-7 . 1.05 )
                    (org-level-8 . 1.05 )
                    ))
      (set-face-attribute (car face) nil :font fb-default-typeface-variable :weight 'regular :height (cdr face))))
#+end_src
**** set fixed-pitch-faces
#+begin_src elisp
  (defun fb*org-font-faces-mono ()
    (set-face-attribute 'org-block            nil :inherit '(fixed-pitch         ) :foreground nil :height (- fb-default-font-size 10))
    (set-face-attribute 'org-checkbox         nil :inherit '(fixed-pitch         )                )
    (set-face-attribute 'org-code             nil :inherit '(fixed-pitch shadow  )                )
    (set-face-attribute 'org-date             nil :inherit '(fixed-pitch         )                )
    (set-face-attribute 'org-formula          nil :inherit '(fixed-pitch         )                )
    (set-face-attribute 'org-indent           nil :inherit '(fixed-pitch org-hide)                )   ;;;; fixes indentation
    (set-face-attribute 'org-link             nil :inherit '(fixed-pitch         ) :weight 'normal)
    (set-face-attribute 'org-meta-line        nil :inherit '(fixed-pitch font-lock-comment-face)  )
    (set-face-attribute 'org-special-keyword  nil :inherit '(fixed-pitch font-lock-comment-face)  )
    (set-face-attribute 'org-table            nil :inherit '(fixed-pitch         )                )
    (set-face-attribute 'org-verbatim         nil :inherit '(fixed-pitch shadow  )                )
    )
#+end_src
***** FUNDUS
#+begin_src elisp
  ;; (set-face-attribute 'org-block           nil :inherit 'fixed-pitch :height (- fb-default-font-size 20))
  ;; (set-face-attribute 'org-block           nil :inherit 'fixed-pitch :height    fb-default-font-size    )

  ;; (set-face-attribute 'org-block            nil :inherit '(fixed-pitch         ) :foreground nil :height (- fb-default-font-size 20))
  ;; (set-face-attribute 'org-block-begin-line nil :inherit '(fixed-pitch         )                )
  ;; (set-face-attribute 'org-block-end-line   nil :inherit '(org-block-begin-line)                )

  ;; (set-face-attribute 'org-block            nil :inherit '(fixed-pitch         ) :foreground nil)
  ;; (set-face-attribute 'org-block-begin-line nil :inherit '(fixed-pitch         )                )
  ;; (set-face-attribute 'org-block-end-line   nil :inherit '(org-block-begin-line)                )

  ;; (set-face-attribute 'org-code            nil :inherit 'fixed-pitch                                    )

  ;;;; NOT WORKING
  ;; (set-face-attribute 'org-document-title  nil :font fb-default-font-name-serif :weight 'regular :height 1)
#+end_src
**** combine variable-pitch, all faces-fixed-pitch
#+begin_src elisp
  (defun fb*org-buffer-variable-pitch-h ()
    (variable-pitch-mode t)
    (fb*org-font-faces-mono))
#+end_src
**** org-mode- hook
#+begin_src elisp
   (add-hook 'org-mode-hook 'fb*org-buffer-variable-pitch-h)
#+end_src
*** misc
**** line-spacing
#+begin_src elisp
  (setq line-spacing 2)
#+end_src
**** {quote,verse}-blocks
#+begin_src elisp
  (setq org-fontify-quote-and-verse-blocks t)
#+end_src
***** example
#+begin_verse
asdfasdf
asdfasdf
asdfa
sdf
#+end_verse
#+begin_quote
asdfasdf
adsfasdf
#+end_quote
