* languages-misc
** marker
#+begin_src elisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; languages-misc
  ;;;;
  ;;
#+end_src
** INFO
*** completion
first search for lsp-server
then for alternative company-backend
*** TODO compAnies
**** elasticsearch
(spacemacs|add-company-backends :backends es-company-backend :modes es-mode)
**** html
:backends (company-web-html company-css)
:backends company-web-jade
:backends company-web-slim
**** json
'company-json` is the default backend unless `lsp' layer is used")
**** markdown
:backends company-capf
:backends company-emoji
**** nginx
emacs-company-nginx
**** nixos
[[com/travisbhartwell/nix-emacs/blob/master/company-nixos-options.el][company-nixos-options]]
use-package company-nixos-options
emacs-company-nixos-options
**** restclient
use-package company-restclient
**** sql
'company-sql` is the default backend unless `lsp' layer is used")
**** web-mode
  '((company-tern company-css company-web-html company-files))))
** company
#+begin_src elisp
    (use-package company
      :after lsp-mode
      :hook (
             (after-init . global-company-mode)
           )
      :custom
      (company-minimum-prefix-length 1)
      (company-idle-delay 0.0)
    )
#+end_src
*** company-box
#+begin_src elisp
  (use-package company-box
    :init
    (setq company-box-icons-alist 'company-box-icons-all-the-icons)
    :hook (company-mode . company-box-mode)
    :config (setq company-box-doc-enable t)
     )
#+end_src
**** FUNDUS
***** icons
#+begin_src elisp :tangle no
  ;; (setq company-box-icons-all-the-icons ....)
  ;; (setq company-box-icons-yasnippet     ....)
#+end_src
***** bindings
#+begin_src elisp
  (kbd "M-h") #'company-box-doc-manually
#+end_src
*** DEPRECATED company-lsp
Comapny-lsp is no longer supported. Delete that package and lsp-mode will pick company-capf.
https://github.com/tigersoldier/company-lsp
#+begin_src elisp :tangle no
  ;; (use-package company-lsp
  ;;   :config
  ;;    ;; (push 'company-lsp company-backends)
  ;;    ;; (push '(company-lsp :with company-yasnippet) company-backends)
  ;;    )
#+end_src
** yasnippets
  https://joaotavora.github.io/yasnippet/snippet-expansion.html
#+begin_src elisp
  (use-package yasnippet
    :init
    (yas-global-mode 1)
    :config
    (setq yas-snippet-dirs
          '(
            "~/.emacs.d/snippets"
            )
          ))
#+end_src
*** yasnippets-snippets
#+begin_src elisp
  (use-package yasnippet-snippets
  :after yasnippet
  :config
    (yasnippet-snippets-initialize)
    (yas-reload-all)
    )
#+end_src
** flycheck
#+begin_src elisp
;; (use-package flycheck
;;   :hook (prog-mode . flycheck-mode)
;;   ;; :config
;;   ;; (global-flycheck-mode)
;;   )
#+end_src
*** modes
**** vimrc-mode
#+begin_src elisp
  (use-package vimrc-mode
    :mode "\\.vim\\(rc\\)?\\'"
    )
#+end_src
